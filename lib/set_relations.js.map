{"version":3,"sources":["../src/set_relations.js"],"names":["setRelations","options","model","modelJson","requestId","topLevelJson","constructor","relations","forEach","embeddedJson","relation","jsonKey","foreignKeys","foreignKey","Object","assign","undefined","ids"],"mappings":";;;;;kBAEwBA,Y;;AAFxB;;;;;;AAEe,SAASA,YAAT,GAAoC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAAA,iBAEGA,OAFH;AAAA,MAE3CC,KAF2C,YAE3CA,KAF2C;AAAA,MAEpCC,SAFoC,YAEpCA,SAFoC;AAAA,MAEzBC,SAFyB,YAEzBA,SAFyB;AAAA,MAEdC,YAFc,YAEdA,YAFc;;;AAIjDH,QAAMI,WAAN,CAAkBC,SAAlB,CAA4BC,OAA5B,CAAoC,oBAAY;;AAE9C,QAAIC,eAAeN,UAAUO,SAASC,OAAnB,CAAnB;AACA,QAAIC,cAAcT,UAAUO,SAASG,UAAnB,CAAlB;;AAEAZ,cAAU;AACRC,kBADQ;AAERQ,wBAFQ;AAGRN,0BAHQ;AAIRC;AAJQ,KAAV;;AAOA,QAAII,YAAJ,EAAkB;AAChBK,aAAOC,MAAP,CAAcd,OAAd,EAAuB,EAAEE,WAAWM,YAAb,EAAvB;AACD,KAFD,MAEO,IAAIG,gBAAgBI,SAApB,EAA+B;AACpCF,aAAOC,MAAP,CAAcd,OAAd,EAAuB,EAAEgB,KAAKL,WAAP,EAAvB;AACD;;AAED;AACA,gCAAYX,OAAZ;AAED,GArBD;AAuBD","file":"set_relations.js","sourcesContent":["import setRelation from './set_relation';\r\n\r\nexport default function setRelations(options = {}) {\r\n\r\n  let { model, modelJson, requestId, topLevelJson } = options;\r\n  \r\n  model.constructor.relations.forEach(relation => {\r\n\r\n    let embeddedJson = modelJson[relation.jsonKey];\r\n    let foreignKeys = modelJson[relation.foreignKey];\r\n\r\n    options = {\r\n      model,\r\n      relation,\r\n      requestId,\r\n      topLevelJson\r\n    }\r\n\r\n    if (embeddedJson) {\r\n      Object.assign(options, { modelJson: embeddedJson });\r\n    } else if (foreignKeys !== undefined) {\r\n      Object.assign(options, { ids: foreignKeys });\r\n    }\r\n\r\n    // console.log(relation.propertyName, attributes);\r\n    setRelation(options);\r\n\r\n  });\r\n\r\n}"]}