{"version":3,"sources":["../src/api.js"],"names":["config","warnings","longStackTraces","cancellation","API","options","Object","assign","request","method","data","endpoint","onSuccess","onError","fileData","superagent","requestData","requestHeaders","doRequest","Error","urlRoot","accept","keys","forEach","set","header","formData","FormData","append","attibuteName","file","send","query","stringify","arrayFormat","resolve","end","err","response","onRequestCompleted","ok","onRequestError"],"mappings":"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","file":"api.js","sourcesContent":["'use strict';\r\n\r\nimport superagentDefault from 'superagent';\r\nimport qs from 'qs';\r\nimport BPromise from 'bluebird';\r\n\r\nimport pick from 'lodash/pick';\r\nimport isFunction from 'lodash/isFunction';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\nBPromise.config({\r\n  warnings: true,\r\n  longStackTraces: true,\r\n  cancellation: true\r\n});\r\n\r\n\r\nconst API = {\r\n\r\n  config(options = {}) {\r\n    Object.assign(this, pick(options, [\r\n      'onRequestError',\r\n      'onRequestCompleted',\r\n      'requestData',\r\n      'requestHeaders',\r\n      'urlRoot',\r\n      'superagent'\r\n    ]))\r\n  },\r\n\r\n\trequest(options = {}) {\r\n\r\n\t\tlet { method, data, endpoint, onSuccess, onError, fileData, superagent } = options;\r\n    let requestData, requestHeaders, doRequest;\r\n    const request = superagent || this.superagent || superagentDefault;\r\n\r\n\t\tif (!method) { method = 'get' }\r\n\t\tif (!data) { data = {} }\r\n\t\tif (!endpoint) {\r\n\t\t\tthrow new Error('Please provide an endpoint for an API call');\r\n\t\t}\r\n\r\n\t\tif (!onSuccess) {\r\n\t\t\tonSuccess = (options) => { }\r\n\t\t}\r\n\r\n    if (!onError) {\r\n      onError = (options) => { }\r\n    }\r\n\r\n    // set headers\r\n\t\tdoRequest = request[method](this.urlRoot+endpoint);\r\n\r\n\r\n    if (isEmpty(fileData)) {\r\n      doRequest.accept('json');\r\n    }\r\n\r\n    if (isFunction(this.requestHeaders)) {\r\n      requestHeaders = this.requestHeaders();\r\n    } else {\r\n      requestHeaders = this.requestHeaders;\r\n    }\r\n\r\n    Object.keys(requestHeaders).forEach(header => {\r\n      doRequest = doRequest.set(header, requestHeaders[header]);\r\n    });\r\n\r\n    // for now do not send any data except files if they are passed\r\n    if (!isEmpty(fileData)) {\r\n      // merge default requestData with object passed with this request\r\n      if (isFunction(this.requestData)) {\r\n  \t\t  requestData = this.requestData();\r\n      } else {\r\n        requestData = this.requestData;\r\n      }\r\n\r\n      Object.assign(data, requestData);\r\n    }\r\n\r\n    // just send as POST or prepare data for GET request\r\n    if (method === 'post' || method === 'put') {\r\n      if (!isEmpty(fileData)) {\r\n        let formData = new FormData();\r\n        formData.append(fileData.attibuteName, fileData.file);\r\n        doRequest.send(formData);\r\n      } else {\r\n        doRequest.send(data);\r\n      }\r\n    } else if (method === 'get' || method == 'del') {\r\n      doRequest.query(\r\n        qs.stringify(\r\n          data,\r\n          { arrayFormat: 'brackets' }\r\n        )\r\n      );\r\n    }\r\n\r\n    return new BPromise( (resolve) => {\r\n\r\n      // send request and act upon result\r\n    \tdoRequest.end( (err, response) => {\r\n        if (this.onRequestCompleted) this.onRequestCompleted(response);\r\n\r\n\t      if (!response.ok) {\r\n\t      \t//let errors = response.body ? response.body.errors : 'Something bad happened';\r\n      \t\t//let statusCode = response.status;\r\n\r\n      \t\tif (this.onRequestError) this.onRequestError(response);\r\n\r\n          onError(response);\r\n\t      } else {\r\n\t      \tonSuccess(response);\r\n        }\r\n\r\n        /*\r\n          we resolve promise even if request\r\n          was not successfull to reduce boilerplat\r\n          + because we  typically don't want ui do\r\n          have some specific behaviour in this case\r\n         */\r\n\r\n        resolve(response);\r\n\r\n      });\r\n\r\n    });\r\n\r\n\t}\r\n};\r\n\r\nexport default API;\r\n"]}