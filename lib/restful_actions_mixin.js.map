{"version":3,"sources":["../src/restful_actions_mixin.js"],"names":["addClassAction","attributes","name","request","method","data","endpoint","urlRoot","onSuccess","options","json","body","model","set","modelJson","jsonKey","topLevelJson","afterCreate","id","isIncludeDeleted","include_deleted","addAction","afterUpdate","onDestroy","afterDestroy"],"mappings":";;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAGA,qBAAUA,cAAV,CAAyB,QAAzB,EAAmC,UAASC,UAAT,EAAqB;AAAA;;AAEtD,MAAI,wBAASA,UAAT,CAAJ,EAA0B;AACxBA,iBAAa,EAAEC,MAAMD,UAAR,EAAb;AACD;;AAED,SAAO,cAAIE,OAAJ,CAAY;AACjBC,YAAQ,MADS;AAEjBC,UAAMJ,UAFW;AAGjBK,cAAU,KAAKC,OAHE;AAIjBC,eAAW,qBAAkB;AAAA,UAAjBC,OAAiB,uEAAP,EAAO;;AAC3B,UAAMC,OAAOD,QAAQE,IAArB;;AAEA,UAAIC,QAAQ,MAAKC,GAAL,CAAS;AACnBC,mBAAWJ,KAAK,MAAKK,OAAV,CADQ;AAEnBC,sBAAcN;AAFK,OAAT,CAAZ;;AAKA,UAAI,0BAAWE,MAAMK,WAAjB,CAAJ,EAAmC;AACjCL,cAAMK,WAAN,CAAkBR,OAAlB;AACD;AAEF;AAhBgB,GAAZ,CAAP;AAkBD,CAxBD;;AA2BA,qBAAUT,cAAV,CAAyB,MAAzB,EAAiC,UAASkB,EAAT,EAAaC,gBAAb,EAA+B;AAAA;;AAC9D,SAAO,cAAIhB,OAAJ,CAAY;AACjBG,cAAa,KAAKC,OAAlB,SAA6BW,EADZ;AAEjBb,UAAM;AACJe,uBAAiBD;AADb,KAFW;AAKjBX,eAAW,qBAAkB;AAAA,UAAjBC,OAAiB,uEAAP,EAAO;;AAC3B,UAAMC,OAAOD,QAAQE,IAArB;;AAEA,aAAKE,GAAL,CAAS;AACPC,mBAAWJ,KAAK,OAAKK,OAAV,CADJ;AAEPC,sBAAcN;AAFP,OAAT;AAKD;AAbgB,GAAZ,CAAP;AAeD,CAhBD;;AAmBA,qBAAUW,SAAV,CAAoB,QAApB,EAA8B,YAA0B;AAAA;;AAAA,MAAjBpB,UAAiB,uEAAJ,EAAI;;AACtD,SAAO,cAAIE,OAAJ,CAAY;AACjBC,YAAQ,KADS;AAEjBC,UAAMJ,UAFW;AAGjBK,cAAa,KAAKC,OAAlB,SAA6B,KAAKW,EAHjB;AAIjBV,eAAW,qBAAkB;AAAA,UAAjBC,OAAiB,uEAAP,EAAO;;AAC3B,UAAMC,OAAOD,QAAQE,IAArB;;AAEA,aAAKE,GAAL,CAAS;AACPC,mBAAWJ,KAAK,OAAKK,OAAV,CADJ;AAEPC,sBAAcN;AAFP,OAAT;;AAKA,UAAI,0BAAW,OAAKY,WAAhB,CAAJ,EAAkC;AAChC,eAAKA,WAAL,CAAiBb,OAAjB;AACD;AAEF;AAhBgB,GAAZ,CAAP;AAkBD,CAnBD;;AAsBA,qBAAUY,SAAV,CAAoB,SAApB,EAA+B,YAAW;AAAA;;AACxC,SAAO,cAAIlB,OAAJ,CAAY;AACjBC,YAAQ,KADS;AAEjBE,cAAa,KAAKC,OAAlB,SAA6B,KAAKW,EAFjB;AAGjBV,eAAW,qBAAkB;AAAA,UAAjBC,OAAiB,uEAAP,EAAO;;AAC3B,aAAKc,SAAL;;AAEA,UAAI,0BAAW,OAAKC,YAAhB,CAAJ,EAAmC;AACjC,eAAKA,YAAL,CAAkBf,OAAlB;AACD;AAEF;AAVgB,GAAZ,CAAP;AAYD,CAbD","file":"restful_actions_mixin.js","sourcesContent":["import API from './api';\r\nimport BaseModel from './base_model';\r\n\r\nimport isString from 'lodash/isString';\r\nimport isFunction from 'lodash/isFunction';\r\n\r\n\r\nBaseModel.addClassAction('create', function(attributes) {\r\n\r\n  if (isString(attributes)) {\r\n    attributes = { name: attributes }\r\n  }\r\n\r\n  return API.request({\r\n    method: 'post',\r\n    data: attributes,\r\n    endpoint: this.urlRoot,\r\n    onSuccess: (options = {}) => {\r\n      const json = options.body;\r\n\r\n      let model = this.set({\r\n        modelJson: json[this.jsonKey],\r\n        topLevelJson: json\r\n      });\r\n\r\n      if (isFunction(model.afterCreate)) {\r\n        model.afterCreate(options);\r\n      }\r\n\r\n    }\r\n  });\r\n});\r\n\r\n\r\nBaseModel.addClassAction('load', function(id, isIncludeDeleted) {\r\n  return API.request({\r\n    endpoint: `${this.urlRoot}/${id}`,\r\n    data: {\r\n      include_deleted: isIncludeDeleted\r\n    },\r\n    onSuccess: (options = {}) => {\r\n      const json = options.body;\r\n\r\n      this.set({\r\n        modelJson: json[this.jsonKey],\r\n        topLevelJson: json\r\n      });\r\n\r\n    }\r\n  })\r\n});\r\n\r\n\r\nBaseModel.addAction('update', function(attributes = {}) {\r\n  return API.request({\r\n    method: 'put',\r\n    data: attributes,\r\n    endpoint: `${this.urlRoot}/${this.id}`,\r\n    onSuccess: (options = {}) => {\r\n      const json = options.body;\r\n\r\n      this.set({\r\n        modelJson: json[this.jsonKey],\r\n        topLevelJson: json\r\n      });\r\n\r\n      if (isFunction(this.afterUpdate)) {\r\n        this.afterUpdate(options);\r\n      }\r\n\r\n    }\r\n  });\r\n});\r\n\r\n\r\nBaseModel.addAction('destroy', function() {\r\n  return API.request({\r\n    method: 'del',\r\n    endpoint: `${this.urlRoot}/${this.id}`,\r\n    onSuccess: (options = {}) => {\r\n      this.onDestroy();\r\n\r\n      if (isFunction(this.afterDestroy)) {\r\n        this.afterDestroy(options);\r\n      }\r\n\r\n    }\r\n  });\r\n});\r\n\r\n"]}